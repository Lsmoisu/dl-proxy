name: Build and Release

on:
  release:
    types: [published]
  push:
    tags: ["v*"]
    branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置QEMU
        uses: docker/setup-qemu-action@v3

      - name: 设置Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录GitHub容器仓库
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 提取元数据
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=
            type=ref,event=branch
            type=ref,event=tag

      - name: 构建并推送Docker镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 设置Go环境
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true

      - name: 构建二进制文件
        run: |
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o dl-proxy-linux-amd64
          GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -o dl-proxy-linux-arm64
          GOOS=windows GOARCH=amd64 CGO_ENABLED=0 go build -o dl-proxy-windows-amd64.exe

      - name: 上传Release资产
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dl-proxy-linux-amd64
            dl-proxy-linux-arm64
            dl-proxy-windows-amd64.exe 